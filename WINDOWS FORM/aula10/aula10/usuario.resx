<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        IdP32+8AAAAASUVORK5CYII=
</value>
  </data>
</root>